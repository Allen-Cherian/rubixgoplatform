definitions:
  model.BasicResponse:
    properties:
      message:
        type: string
      result: {}
      status:
        type: boolean
    type: object
info:
  contact:
    email: murali.c@ensurity.com
    name: API Support
  description: Rubix core API to control & manage the node.
  title: Rubix Core
  version: "0.9"
paths:
  /api/commit-data-token:
    post:
      consumes:
      - application/json
      description: This API will create data token
      parameters:
      - description: DID
        in: query
        name: did
        required: true
        type: string
      - description: Batch ID
        in: query
        name: batchID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.BasicResponse'
      summary: Create Data Token
      tags:
      - Data Tokens
  /api/create-data-token:
    post:
      consumes:
      - multipart/form-data
      description: This API will create data token
      parameters:
      - description: User/Entity ID
        in: formData
        name: UserID
        type: string
      - description: User/Entity Info
        in: formData
        name: UserInfo
        type: string
      - description: Committer DID
        in: formData
        name: CommitterDID
        type: string
      - description: Batch ID
        in: formData
        name: BacthID
        type: string
      - description: File Info is json string {
        in: formData
        name: FileInfo
        type: string
      - description: File to be committed
        in: formData
        name: FileContent
        type: file
      produces:
      - multipart/form-data
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.BasicResponse'
      summary: Create Data Token
      tags:
      - Data Tokens
  /api/get-account-info:
    get:
      consumes:
      - application/json
      description: For a mentioned DID, check the account balance
      parameters:
      - description: User DID
        in: query
        name: did
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.BasicResponse'
      summary: Check account balance
      tags:
      - Account
  /api/get-by-comment:
    get:
      consumes:
      - application/json
      description: Retrieves the details of a transaction based on its comment.
      operationId: get-by-comment
      parameters:
      - description: Comment to identify the transaction
        in: query
        name: Comment
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.BasicResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.BasicResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.BasicResponse'
      summary: Get transaction details by Transcation Comment
      tags:
      - Account
  /api/get-by-did:
    get:
      consumes:
      - application/json
      description: Retrieves the details of a transaction based on dID.
      operationId: get-by-did
      parameters:
      - description: DID of sender/receiver
        in: query
        name: DID
        required: true
        type: string
      - description: Filter by role as sender or receiver
        in: query
        name: Role
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.BasicResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.BasicResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.BasicResponse'
      summary: Get transaction details by dID
      tags:
      - Account
  /api/get-data-token:
    get:
      consumes:
      - application/json
      description: This API will get all data token belong to the did
      parameters:
      - description: DID
        in: query
        name: did
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.BasicResponse'
      summary: Get Data Token
      tags:
      - Data Tokens
  /api/get-txn-details-by-id:
    get:
      consumes:
      - application/json
      description: Retrieves the details of a transaction based on its ID.
      operationId: get-txn-details-by-id
      parameters:
      - description: The ID of the transaction to retrieve
        in: query
        name: txnID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.BasicResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.BasicResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.BasicResponse'
      summary: Get transaction details by Transcation ID
      tags:
      - Account
  /api/initiate-rbt-transfer:
    post:
      consumes:
      - application/json
      description: This API will initiate RBT transfer to the specified dID
      operationId: initiate-rbt-transfer
      parameters:
      - description: The decentralized identifier of the receiver
        in: body
        name: receiver
        required: true
        schema:
          type: string
      - description: The decentralized identifier of the sender
        in: body
        name: sender
        required: true
        schema:
          type: string
      - description: The number of RBT tokens to transfer
        in: body
        name: tokenCount
        required: true
        schema:
          type: string
      - description: A comment for the transfer
        in: body
        name: comment
        schema:
          type: string
      - description: The type of transfer (1 for direct transfer, 2 for group transfer)
        in: body
        name: type
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.BasicResponse'
      summary: Initiate RBT Transfer
      tags:
      - Account
  /api/start:
    get:
      consumes:
      - application/json
      description: It will setup the core if not done before
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.BasicResponse'
      summary: Start Core
      tags:
      - Basic
securityDefinitions:
  SessionToken:
    in: header
    name: Session-Token
    type: apiKey
swagger: "2.0"
